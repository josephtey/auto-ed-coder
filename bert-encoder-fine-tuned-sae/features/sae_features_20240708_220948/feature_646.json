{
    "index": 646,
    "label": "Text with technical or structured data",
    "attributes": "contain coding snippets, technical jargon, structured information, detailed research data, mentions of specific statistics or measurements",
    "reasoning": "After reviewing the samples, it's evident that the texts in the samples categorized under <positive-samples> include various structured and list-like information often with specific coding snippets, technical jargon, or detailed research information. In contrast, the texts in the other samples are conversational, lacking the formal or technical structure. Furthermore, the samples include mentions of specific fields like software development, academic performance statistics, and medical case studies.",
    "density": 6.168709458529665e-05,
    "confidence": 58.0,
    "high_act_samples": [
        {
            "text": "(Du wirst zu stripe.com umgeleitet um die Zahlung abzuschliessen) CHF 10.00 CHF 15.00 CHF 25.00 Oder unterst\u00fctze uns mit deinem Wunschbetrag per Bank\u00fcberweisung.",
            "act": 0.04970531910657883
        },
        {
            "text": "package com.huawei.g11n.tmr.datetime.data;\n\nimport java.util.HashMap;\n\npublic class LocaleParamGet_ne {\n    public HashMap<String, String> date = new HashMap<String, String>() {\n        /* class com.huawei.g11n.tmr.datetime.data.LocaleParamGet_ne.AnonymousClass1 */\n\n        {\n            put(\"param_tmark\", \":\");\n            put(\"param_am\", \"\u092c\u093f\u0939\u093e\u0928|\u092a\u0942\u0930\u094d\u0935\u093e\u0939\u094d\u0928\");\n            put(\"param_pm\", \"\u0930\u093e\u0924\u093f|\u092c\u091c\u0947\u0938\u092e\u094d\u092e|\u0926\u093f\u0909\u0901\u0938\u094b|\u0930\u093e\u0924\u093f\u0915\u094b|\u092e\u0927\u094d\u092f\u093e\u0939\u094d\u0928|\u092c\u0947\u0932\u0941\u0915\u093e|\u0905\u092a\u0930\u093e\u0939\u094d\u0928\");\n            put(\"param_MMM\", \"\u091c\u0928\u0935\u0930\u0940|\u092b\u0947\u092c\u094d\u0930\u0941\u0905\u0930\u0940|\u092e\u093e\u0930\u094d\u091a|\u0905\u092a\u094d\u0930\u093f\u0932|\u092e\u0947|\u091c\u0941\u0928|\u091c\u0941\u0932\u093e\u0908|\u0905\u0917\u0938\u094d\u091f|\u0938\u0947\u092a\u094d\u091f\u0947\u092e\u094d\u092c\u0930|\u0905\u0915\u094d\u091f\u0941\u092c\u0930|\u0928\u094b\u092d\u0947\u092e\u094d\u092c\u0930|\u0921\u093f\u0938\u0947\u092e\u094d\u092c\u0930\");\n            put(\"param_MMMM\", \"\u091c\u0928\u0935\u0930\u0940|\u092b\u0947\u092c\u094d\u0930\u0941\u0905\u0930\u0940|\u092e\u093e\u0930\u094d\u091a|\u0905\u092a\u094d\u0930\u093f\u0932|\u092e\u0908|\u091c\u0941\u0928|\u091c\u0941\u0932\u093e\u0908|\u0905\u0917\u0938\u094d\u091f|\u0938\u0947\u092a\u094d\u091f\u0947\u092e\u094d\u092c\u0930|\u0905\u0915\u094d\u091f\u094b\u092c\u0930|\u0928\u094b\u092d\u0947\u092e\u094d\u092c\u0930|\u0921\u093f\u0938\u0947\u092e\u094d\u092c\u0930\");\n            put(\"param_E\", \"\u0906\u0907\u0924|\u0938\u094b\u092e|\u092e\u0919\u094d\u0917\u0932|\u092c\u0941\u0927|\u092c\u093f\u0939\u0940|\u0936\u0941\u0915\u094d\u0930|\u0936\u0928\u093f\");\n            put(\"param_E2\", \"\u0906\u0907\u0924|\u0938\u094b\u092e|\u092e\u0919\u094d\u0917\u0932|\u092c\u0941\u0927|\u092c\u093f\u0939\u0940|\u0936\u0941\u0915\u094d\u0930|\u0936\u0928\u093f\");\n            put(\"param_EEEE\", \"\u0906\u0907\u0924\u092c\u093e\u0930|\u0938\u094b\u092e\u092c\u093e\u0930|\u092e\u0919\u094d\u0917\u0932\u092c\u093e\u0930|\u092c\u0941\u0927\u092c\u093e\u0930|\u092c\u093f\u0939\u0940\u092c\u093e\u0930|\u0936\u0941\u0915\u094d\u0930\u092c\u093e\u0930|\u0936\u0928\u093f\u092c\u093e\u0930\");\n            put(\"param_days\", \"\u0906\u091c|\u092d\u094b\u0932\u093f|\u092a\u0930\u094d\u0938\u093f\");\n            put(\"param_thisweek\", \"\u092f\u094b\\\\s+\u0906\u0907\u0924\u092c\u093e\u0930|\u092f\u094b\\\\s+\u0938\u094b\u092e\u092c\u093e\u0930|\u092f\u094b\\\\s+\u092e\u0902\u0917\u0932\u092c\u093e\u0930|\u092f\u094b\\\\s+\u092c\u0941\u0927\u092c\u093e\u0930|\u092f\u094b\\\\s+\u092c\u093f\u0939\u093f\u092c\u093e\u0930|\u092f\u094b\\\\s+\u0936\u0941\u0915\u094d\u0930\u092c\u093e\u0930|\u092f\u094b\\\\s+\u0936\u0928\u093f\u092c\u093e\u0930\");\n            put(\"param_nextweek\", \"\u0905\u0930\u094d\u0915\u094b\\\\s+\u0906\u0907\u0924\u092c\u093e\u0930|\u0905\u0930\u094d\u0915\u094b\\\\s+\u0938\u094b\u092e\u092c\u093e\u0930|\u0905\u0930\u094d\u0915\u094b\\\\s+\u092e\u0902\u0917\u0932\u092c\u093e\u0930|\u0905\u0930\u094d\u0915\u094b\\\\s+\u092c\u0941\u0927\u092c\u093e\u0930|\u0905\u0930\u094d\u0915\u094b\\\\s+\u092c\u093f\u0939\u093f\u092c\u093e\u0930|\u0905\u0930\u094d\u0915\u094b\\\\s+\u0936\u0941\u0915\u094d\u0930\u092c\u093e\u0930|\u0905\u0930\u094d\u0915\u094b\\\\s+\u0936\u0928\u093f\u092c\u093e\u0930\");\n            put(\"mark_ShortDateLevel\", \"mdy\");\n        }\n    };\n}",
            "act": 0.038483232259750366
        },
        {
            "text": "Academics\n\nStudents/Teachers\n\nStudents\n\n299\n\nTeachers\n\n22.3\n\nStudent/Teacher ratio\n\n14:1\n\nFree lunch\n\n147\n\nReduced lunch\n\n15\n\nAdvanced Placement\n\nAP enrollment\n\nn/a\n\nTaking some courses\n\nn/a\n\nTaking some courses (not tests)\n\nn/a\n\nPassing some courses\n\nn/a\n\nPassing no courses\n\nn/a\n\nAdvanced placement (AP) is a program that offers high school students the ability to take college level courses and exams.",
            "act": 0.03451424092054367
        },
        {
            "text": "Liga in 2008 as the new third tier, below the 2.",
            "act": 0.0315493568778038
        },
        {
            "text": "The relevant info.plist section looks like\n<key>NSAppTransportSecurity</key>\n<dict>\n    <key>NSAllowsArbitraryLoadsInWebContent</key>\n    <false/>\n    <key>NSAllowsArbitraryLoads</key>\n    <false/>\n    <key>NSExceptionDomains</key>\n    <dict>\n        <key>example.com</key>\n        <dict>\n            <key>NSExceptionAllowsInsecureHTTPLoads</key>\n            <true/>\n            <key>NSIncludesSubdomains</key>\n            <true/>\n        </dict>\n\nThis works so long as the NSExceptionAllowsInsecureHTTPLoads setting is set to true.",
            "act": 0.029917072504758835
        },
        {
            "text": "With the best ways and cleaning solutions be to bring the best results that stand your expectations completely.",
            "act": 0.020478032529354095
        },
        {
            "text": "Line 85 \u2013 End.",
            "act": 0.019259735941886902
        },
        {
            "text": "When returning merchandise to Campmor, carefully wrap the items and return them Parcel Post insured or UPS.",
            "act": 0.019137762486934662
        },
        {
            "text": "Open up the bag and garnish with the chips.",
            "act": 0.013979113660752773
        },
        {
            "text": "But independent Google data shows Service NSW branches being regularly used by customers from 7am, at Castle Hill, Ryde, Chatswood and Warners Bay, and from 8am at Penrith, Parramatta, Botany, Hornsby and Wagga.",
            "act": 0.013752146624028683
        },
        {
            "text": "A bez\u00e1rts\u00e1g jelentette probl\u00e9m\u00e1kr\u00f3l az Indexnek is mes\u00e9ltek a helysz\u00ednr\u0151l, az MTI pedig arr\u00f3l \u00edr, hogy horg\u00e1szni \u00e9s tengerparti napoz\u00e1sra is kil\u00f3gnak a h\u00e1zi karant\u00e9nb\u00f3l az olaszok.",
            "act": 0.010601541958749294
        },
        {
            "text": "By continuing to use our service, you agree to our use of cookies.",
            "act": 0.009920465759932995
        },
        {
            "text": "$json .",
            "act": 0.007792226038873196
        },
        {
            "text": "HTC's Vive Pro headset is available to pre-order for $799\n\nWe've seen plenty of Beats-focused KIRFs in our time, some better than others.",
            "act": 0.0
        },
        {
            "text": "Few, however, play quite so directly on the name as OrigAudio's Beets.",
            "act": 0.0
        },
        {
            "text": "For $25, adopters get a set of headphones that bear little direct resemblance to Dr. Dre's audio gear of choice, but are no doubt bound to impress friends -- at least, up until they see a root vegetable logo instead of a lower-case B. Thankfully, there's more to it than just amusing and confusing peers.",
            "act": 0.0
        },
        {
            "text": "Every purchase will lead to a donation of canned beets (what else?)",
            "act": 0.0
        },
        {
            "text": "to the Second Harvest Food Bank of Orange County.",
            "act": 0.0
        },
        {
            "text": "For us, that's reason enough to hope that Beats doesn't put the kibosh on OrigAudio's effort.",
            "act": 0.0
        },
        {
            "text": "Besides, we could use some accompaniment for our BeetBox.",
            "act": 0.0
        },
        {
            "text": "Q:\n\nNullPointerException in getview of custom adapter\n\nI'm getting image from bitmap method and trying to populate the listview.",
            "act": 0.0
        },
        {
            "text": "But when i call the bitmap function inside getview the nullpointerException error occurs.",
            "act": 0.0
        },
        {
            "text": "please help me... \nhere is my view Activity class:\npublic class Viewactivity extends Activity{\n\n    TextView tv;\n    ImageView im;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.views);\n\n        ListView mListView = (ListView)findViewById(R.id.listView);\n        //array houlds all images\n        int Images[] = new int[]{\n            R.drawable.confidential,\n            ...     \n            };\n        //array holds all strings to be drawn in the image\n\n        CustomList adaptor = new CustomList(this , Images);\n        mListView.setAdapter(adaptor);\n\n    }\n\n    public Bitmap ProcessingBitmap(int image) {\n        // TODO Auto-generated method stub\n        Bitmap bm1 = null;\n        Bitmap newBitmap = null;\n\n        final String data =getIntent().getExtras().getString(\"keys\");\n        bm1 = ((BitmapDrawable) Viewactivity.this.getResources()\n                .getDrawable(image)).getBitmap();\n        Config config = bm1.getConfig();\n        if(config == null){\n            config = Bitmap.Config.ARGB_8888;\n        }\n\n        newBitmap = Bitmap.createBitmap(bm1.getWidth(), bm1.getHeight(),config);\n        Canvas newCanvas = new Canvas(newBitmap);\n\n        newCanvas.drawBitmap(bm1, 0, 0, null);\n\n        if(data != null){\n            Paint paintText = new Paint(Paint.ANTI_ALIAS_FLAG);\n            paintText.setColor(Color.RED);\n            paintText.setTextSize(300);\n            // paintText.setTextAlign(Align.CENTER);\n            paintText.setStyle(Style.FILL);\n            paintText.setShadowLayer(10f, 10f, 10f, Color.BLACK);\n\n            Rect rectText = new Rect();\n            paintText.getTextBounds(data, 0, data.length(), rectText);\n            paintText.setTextScaleX(1.f);\n\n            newCanvas.drawText(data, \n              0, rectText.height(), paintText);\n\n            Toast.makeText(getApplicationContext(), \n              \"drawText: \" + data, Toast.LENGTH_LONG).show();\n\n        }else{\n            Toast.makeText(getApplicationContext(), \n              \"caption empty!",
            "act": 0.0
        },
        {
            "text": "\", Toast.LENGTH_LONG).show();\n        }\n        return newBitmap;\n\n    }\n}\n\nthis is my adapter class:\npublic class CustomList extends BaseAdapter{\n\n    Viewactivity act;\n    int[] IMAGES;\n    LayoutInflater inflator;\n    Context sContext;\n    //private String[] TEXTS;\n\n    public CustomList(Context context, int[] images){\n        this.IMAGES = images;\n        //this.TEXTS = texts;\n        this.sContext = context;\n        inflator = (LayoutInflater)context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n    }\n\n    @Override\n    public int getCount() {\n        // TODO Auto-generated method stub\n        return IMAGES.length;\n    }\n\n    @Override\n    public Object getItem(int position) {\n        // TODO Auto-generated method stub\n        return position;\n    }\n\n    @Override\n    public long getItemId(int position) {\n        // TODO Auto-generated method stub\n        return position;\n    }\n\n    @Override\n    public View getView(int position, View convertView, ViewGroup parent) {\n        // TODO Auto-generated method stub\n        View v = inflator.inflate(R.layout.row_list, parent, false);\n        final ImageView imageView = (ImageView) v.findViewById(R.id.imageView);\n        imageView.setImageBitmap(act.ProcessingBitmap(IMAGES[position]));// line no:52\n        return imageView;\n    }\n}\n\nthis is my logcat:\n12-18 06:16:51.406: E/AndroidRuntime(1388): FATAL EXCEPTION: main\n12-18 06:16:51.406: E/AndroidRuntime(1388): Process: com.emple.example, PID: 1388\n12-18 06:16:51.406: E/AndroidRuntime(1388): java.lang.NullPointerException\n12-18 06:16:51.406: E/AndroidRuntime(1388):     at com.emple.example.CustomList.getView(CustomList.java:52)\n12-18 06:16:51.406: E/AndroidRuntime(1388):     at android.widget.AbsListView.obtainView(AbsListView.java:2263)\n12-18 06:16:51.406: E/AndroidRuntime(1388):     at android.widget.ListView.measureHeightOfChildren(ListView.java:1263)\n12-18 06:16:51.406: E/AndroidRuntime(1388):     at android.widget.ListView.onMeasure(ListView.java:1175)\n12-18 06:16:51.406: E/AndroidRuntime(1388):     at android.view.View.measure(View.java:16497)\n12-18 06:16:51.406: E/AndroidRuntime(1388):     at android.widget.RelativeLayout.measureChild(RelativeLayout.java:689)\n12-18 06:16:51.406: E/AndroidRuntime(1388):     at android.widget.RelativeLayout.onMeasure(RelativeLayout.java:473)\n12-18 06:16:51.406: E/AndroidRuntime(1388):     at android.view.View.measure(View.java:16497)\n12-18 06:16:51.406: E/AndroidRuntime(1388):     at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5125)\n12-18 06:16:51.406: E/AndroidRuntime(1388):     at android.widget.FrameLayout.onMeasure(FrameLayout.java:310)\n12-18 06:16:51.406: E/AndroidRuntime(1388):     at android.view.View.measure(View.java:16497)\n12-18 06:16:51.406: E/AndroidRuntime(1388):     at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5125)\n12-18 06:16:51.406: E/AndroidRuntime(1388):     at com.android.internal.widget.ActionBarOverlayLayout.onMeasure(ActionBarOverlayLayout.java:327)\n12-18 06:16:51.406: E/AndroidRuntime(1388):     at android.view.View.measure(View.java:16497)\n12-18 06:16:51.406: E/AndroidRuntime(1388):     at android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:5125)\n12-18 06:16:51.406: E/AndroidRuntime(1388):     at android.widget.FrameLayout.onMeasure(FrameLayout.java:310)\n12-18 06:16:51.406: E/AndroidRuntime(1388):     at com.android.internal.policy.impl.PhoneWindow$DecorView.onMeasure(PhoneWindow.java:2291)\n12-18 06:16:51.406: E/AndroidRuntime(1388):     at android.view.View.measure(View.java:16497)\n12-18 06:16:51.406: E/AndroidRuntime(1388):     at android.view.ViewRootImpl.performMeasure(ViewRootImpl.java:1916)\n12-18 06:16:51.406: E/AndroidRuntime(1388):     at android.view.ViewRootImpl.measureHierarchy(ViewRootImpl.java:1113)\n12-18 06:16:51.406: E/AndroidRuntime(1388):     at android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:1295)\n12-18 06:16:51.406: E/AndroidRuntime(1388):     at android.view.ViewRootImpl.doTraversal(ViewRootImpl.java:1000)\n12-18 06:16:51.406: E/AndroidRuntime(1388):     at android.view.ViewRootImpl$TraversalRunnable.run(ViewRootImpl.java:5670)\n12-18 06:16:51.406: E/AndroidRuntime(1388):     at android.view.Choreographer$CallbackRecord.run(Choreographer.java:761)\n12-18 06:16:51.406: E/AndroidRuntime(1388):     at android.view.Choreographer.doCallbacks(Choreographer.java:574)\n12-18 06:16:51.406: E/AndroidRuntime(1388):     at android.view.Choreographer.doFrame(Choreographer.java:544)\n12-18 06:16:51.406: E/AndroidRuntime(1388):     at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:747)\n12-18 06:16:51.406: E/AndroidRuntime(1388):     at android.os.Handler.handleCallback(Handler.java:733)\n12-18 06:16:51.406: E/AndroidRuntime(1388):     at android.os.Handler.dispatchMessage(Handler.java:95)\n12-18 06:16:51.406: E/AndroidRuntime(1388):     at android.os.Looper.loop(Looper.java:136)\n12-18 06:16:51.406: E/AndroidRuntime(1388):     at android.app.ActivityThread.main(ActivityThread.java:5017)\n12-18 06:16:51.406: E/AndroidRuntime(1388):     at java.lang.reflect.Method.invokeNative(Native Method)\n12-18 06:16:51.406: E/AndroidRuntime(1388):     at java.lang.reflect.Method.invoke(Method.java:515)\n12-18 06:16:51.406: E/AndroidRuntime(1388):     at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)\n12-18 06:16:51.406: E/AndroidRuntime(1388):     at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)\n12-18 06:16:51.406: E/AndroidRuntime(1388):     at dalvik.system.NativeStart.main(Native Method)\n12-18 06:21:51.616: I/Process(1388): Sending signal.",
            "act": 0.0
        },
        {
            "text": "PID: 1388 SIG: 9\n\nA:\n\nYou haven't initialized your act variable.",
            "act": 0.0
        },
        {
            "text": "Init it in your adapter constructor.",
            "act": 0.0
        },
        {
            "text": "Something like:\npublic CustomList(Viewactivitty act, int[] images){\n    this.act = act;\n    this.IMAGES = images;\n    //this.TEXTS = texts;\n    this.sContext = act;\n    inflator = (LayoutInflater)act.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n}",
            "act": 0.0
        },
        {
            "text": "Syringocystadenoma papilliferum of the cervix presenting as vulvar growth in an adolescent girl.",
            "act": 0.0
        },
        {
            "text": "Syringocystadenoma papilliferum (SCP) is a rare, benign, adnexal tumour of apocrine or eccrine differentiation.",
            "act": 0.0
        },
        {
            "text": "It is commonly located on head and neck region.",
            "act": 0.0
        },
        {
            "text": "We report the case of an 18-year-old woman who presented with a vulvar lobulated growth that was found to arise from the posterior lip of cervix.",
            "act": 0.0
        },
        {
            "text": "Histopathological examination revealed the diagnosis of SCP.",
            "act": 0.0
        },
        {
            "text": "To our knowledge, SCP arising from the cervix has never been reported previously in the literature, thus we believe this to be the first case of SCP arising from the posterior lip of the cervix.",
            "act": 0.0
        },
        {
            "text": "The basic goal of the effective altruism movement is to create efficient philanthropic change by backing programs and innovations that are cost-effective so that each dollar given impacts as many people as possible.",
            "act": 0.0
        },
        {
            "text": "The underlying tenet is that donor dollars are a limited resource, but dollars are just one of the limiting factors.",
            "act": 0.0
        },
        {
            "text": "There\u2019s still another major resource that needs to be accounted for: research time.",
            "act": 0.0
        },
        {
            "text": "There\u2019s a learning curve for calculation-driven cause groups (and donors) to figure out what world-plaguing problems really are the most pressing, what solutions seem the most promising or neglected, and what else might need to be done.",
            "act": 0.0
        },
        {
            "text": "The problem is there hasn\u2019t been a single resource for accessing all this information in one place.",
            "act": 0.0
        },
        {
            "text": "To change that, Rethink Priorities, an initiative of the effective altruism awareness and engagement building nonprofit Rethink Charity, has launched Priority Wiki, a publicly editable Wikipedia-like online encyclopedia for cause prioritization wonks.",
            "act": 0.0
        },
        {
            "text": "It collects and categorizes vetted research around pressing charitable causes and potential interventions.",
            "act": 0.0
        },
        {
            "text": "\u201cThis is a big problem because thousands of hours are going into this kind of research, and you don\u2019t want people to forget it exists, or maybe try to duplicate efforts, or just not even remember it,\u201d says Peter Hurford, who codeveloped the wiki alongside colleague Marcus Davis.",
            "act": 0.0
        },
        {
            "text": "\u201cWe\u2019re trying to capture all relevant research under a wide variety of global issues so that everyone can have a go-to spot to get up to speed.\u201d\n\nTo do that, Wiki is organized into six broad types of causes.",
            "act": 0.0
        },
        {
            "text": "That includes \u201cExistential/Catastrophic Future Risks,\u201d \u201cImproving Research,\u201d \u201cDecisions and Values,\u201d \u201cImproving Policy,\u201d \u201cDeveloping World Health and Economic Development,\u201d \u201cDeveloped World Health and Economic Development,\u201d and \u201cSpecific Scientific Research.\u201d Each entry is then comprised of related topics.",
            "act": 0.0
        },
        {
            "text": "Under the catastrophe heading, for instance, there\u2019s biosecurity, nuclear security, climate change, and geomagnetic storms.",
            "act": 0.0
        },
        {
            "text": "As the developers explain in an open letter about their efforts, the wiki is currently populated with a collection of research by effective altruism research organizations including Open Philanthropy, GiveWell, 80,000 Hours, and Animal Charity Evaluators.",
            "act": 0.0
        },
        {
            "text": "Many of these are formatted in what\u2019s commonly referred to as a \u201cshallow review,\u201d or high-level overview of each issue, and various important statistics and findings.",
            "act": 0.0
        },
        {
            "text": "\u201cThat gives you a lot of opportunities to dive into the problem and make a more structured way than dumping someone a 60-item reading list,\u201d says Hurford.",
            "act": 0.0
        },
        {
            "text": "Contributors are already revising the content and sharing data about things the originators hadn\u2019t considered.",
            "act": 0.0
        },
        {
            "text": "Two recent additions include information about psychedelics and drug reform, and how to prevent or reduce aging-related diseases to extend our natural lifespan.",
            "act": 0.0
        },
        {
            "text": "Essays\n\nPhilosophers who think everyday morality is objective should examine the evidence, argues Joshua Knobe.",
            "act": 0.0
        }
    ],
    "low_act_samples": [
        {
            "text": "Can you explain your reasoning again?",
            "act": 0.0
        },
        {
            "text": "The facts seem to keep getting in the way of your theory .",
            "act": 0.0
        },
        {
            "text": ".",
            "act": 0.0
        },
        {
            "text": ".",
            "act": 0.0
        },
        {
            "text": ".",
            "act": 0.0
        },
        {
            "text": "[Bad facts!",
            "act": 0.0
        },
        {
            "text": "BAD!]",
            "act": 0.0
        },
        {
            "text": "hooray4anything\n\nWhat I'm trying to say is that nobody really knows what Oswald was doing or what he believed because he got shot too quickly to know and his motivations too murky.",
            "act": 0.0
        },
        {
            "text": "It's also hard to know because there's way too many stories out there about the whole thing but most of them do tend towards the JFK being killed as a result of him being blamed for allowing Castro to take over Cuba, whether it be the mob, anti-Castro-ites, or the CIA.",
            "act": 0.0
        },
        {
            "text": "None of those three could be considered lefty.",
            "act": 0.0
        },
        {
            "text": "So, in other words, calling Oswald one thing or another is silly because nobody knows and if there is a meme out there saying he was some crazy-ass liberal, then it shows just how desperate some people are to twist history into their weird little worldviews but facts are stubborn little things.",
            "act": 0.0
        },
        {
            "text": "fuflans\n\nsimon, please list those left wing assassinations of which you speak?",
            "act": 0.0
        },
        {
            "text": "cause i'm pretty up the news and can't think of any recent ones.",
            "act": 0.0
        },
        {
            "text": "assassinations in this country in the last 30 years have been right wing christian nutjobs, right wing islamic nutjobs and random troubled students.",
            "act": 0.0
        },
        {
            "text": "SorosBot\n\nThere's none that I can think of since the guy who killed McKinley, 110 years ago.",
            "act": 0.0
        },
        {
            "text": "Hell, the guy who shot the single right-winger who was the victim of an assassination attempt in the wave of assassinations of left-wing figures in the 60s and 70s turned out to be a nutcase who just wanted to assassinate somebody important so he would become famous; and likewise Hinkley was just an insane stalker.",
            "act": 0.0
        },
        {
            "text": "Jukesgrrl\n\nU of A basketball game scheduled for today has been canceled.",
            "act": 0.0
        },
        {
            "text": "That's as serious as shit gets here in Tucson.",
            "act": 0.0
        },
        {
            "text": "jim89048\n\nEven MSNBC stopped their weekend prison marathon to run with this, so yeah, pretty serious.",
            "act": 0.0
        },
        {
            "text": "luke_warm\n\nIt's in his second video where he talks about the constitution and \"apprehending\" the current slate of treasonous laws.",
            "act": 0.0
        },
        {
            "text": "But yeah, he's batshit.",
            "act": 0.0
        },
        {
            "text": "The judge who was assassinated was Chief Judge John Roll of the U.S. District Court for the District of Arizona.",
            "act": 0.0
        },
        {
            "text": "He had received death threats in the past from \u2026 guess!",
            "act": 0.0
        },
        {
            "text": "\u2026 talk-show listeners because he allowed a lawsuit by undocumented immigrants to go past summary judgment, and god help you if you do anything good for a Brown.",
            "act": 0.0
        },
        {
            "text": "So now we have not only had an attack on a Congresswoman (probably) because of her political affiliation but also a literal attack on judicial independence.",
            "act": 0.0
        },
        {
            "text": "In February, when U.S. District Judge John Roll presided over a $32 million civil-rights lawsuit filed by illegal immigrants against an Arizona rancher, the Marshals Service was anticipating the fallout.",
            "act": 0.0
        },
        {
            "text": "When Roll ruled the case could go forward, [Arizona U.S.",
            "act": 0.0
        },
        {
            "text": "Marshal] Gonzales said talk-radio shows cranked up the controversy and spurred audiences into making threats.",
            "act": 0.0
        },
        {
            "text": "In one afternoon, Roll logged more than 200 phone calls.",
            "act": 0.0
        },
        {
            "text": "Callers threatened the judge and his family.",
            "act": 0.0
        },
        {
            "text": "They posted personal information about Roll online.",
            "act": 0.0
        },
        {
            "text": "\"They said, 'We should kill him.",
            "act": 0.0
        },
        {
            "text": "He should be dead,' \" Gonzales said.",
            "act": 0.0
        },
        {
            "text": "Roll, who is the chief federal judge in Arizona, said both he and his wife were given a protection detail for about a month.",
            "act": 0.0
        },
        {
            "text": "\"It was unnerving and invasive.",
            "act": 0.0
        },
        {
            "text": ".",
            "act": 0.0
        },
        {
            "text": ".",
            "act": 0.0
        },
        {
            "text": ".",
            "act": 0.0
        },
        {
            "text": "By its nature it has to be,\" Roll said, adding that they were encouraged to live their lives as normally as possible.",
            "act": 0.0
        },
        {
            "text": "\"It was handled very professionally by the Marshals Service.\"",
            "act": 0.0
        },
        {
            "text": "At the end of the month, Roll said four key men had been identified as threat makers.",
            "act": 0.0
        },
        {
            "text": "The Marshals Service left to him the decision to press charges but recommended against it.",
            "act": 0.0
        },
        {
            "text": "Roll said he had no qualms about following their advice.",
            "act": 0.0
        },
        {
            "text": "AZ_Transplant\n\nI worked in her office last year.",
            "act": 0.0
        },
        {
            "text": "I only met her a few times, but she she was always really genuine and kind.",
            "act": 0.0
        },
        {
            "text": "I hope she pulls through.",
            "act": 0.0
        },
        {
            "text": "It's not a particularly common name, is it?",
            "act": 0.0
        },
        {
            "text": "Photo must be from 2010 festival, since the 2011 one is not scheduled until March.",
            "act": 0.0
        },
        {
            "text": "karen\n\nYeah that's what I was thinking.",
            "act": 0.0
        },
        {
            "text": "EdFlintstone\n\nSarah save your bullshit sympathy post on fucking facebook.",
            "act": 0.0
        }
    ]
}